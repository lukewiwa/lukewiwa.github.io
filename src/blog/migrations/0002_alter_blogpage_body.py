# Generated by Django 5.1.1 on 2025-01-15 02:37

import wagtail.fields
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='blogpage',
            name='body',
            field=wagtail.fields.StreamField([('rich_text', 0), ('image', 1), ('quote', 2), ('code_highlight', 5), ('fold', 6)], block_lookup={0: ('wagtail.blocks.RichTextBlock', (), {}), 1: ('wagtail.images.blocks.ImageChooserBlock', (), {}), 2: ('wagtail.blocks.BlockQuoteBlock', (), {}), 3: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('1c', '1C'), ('4d', '4D'), ('sap-abap', 'ABAP'), ('abnf', 'ABNF'), ('accesslog', 'Access logs'), ('ada', 'Ada'), ('apex', 'Apex'), ('arduino', 'Arduino (C++ w/Arduino libs)'), ('armasm', 'ARM assembler'), ('avrasm', 'AVR assembler'), ('actionscript', 'ActionScript'), ('alan', 'Alan IF'), ('ln', 'Alan'), ('angelscript', 'AngelScript'), ('apache', 'Apache'), ('applescript', 'AppleScript'), ('arcade', 'Arcade'), ('asciidoc', 'AsciiDoc'), ('aspectj', 'AspectJ'), ('autohotkey', 'AutoHotkey'), ('autoit', 'AutoIt'), ('awk', 'Awk'), ('ballerina', 'Ballerina'), ('bash', 'Bash'), ('basic', 'Basic'), ('bbcode', 'BBCode'), ('blade', 'Blade (Laravel)'), ('bnf', 'BNF'), ('bqn', 'BQN'), ('brainfuck', 'Brainfuck'), ('csharp', 'C#'), ('c', 'C'), ('cpp', 'C++'), ('cal', 'C/AL'), ('c3', 'C3'), ('cos', 'Cache Object Script'), ('candid', 'Candid'), ('cmake', 'CMake'), ('cobol', 'COBOL'), ('coq', 'Coq'), ('csp', 'CSP'), ('css', 'CSS'), ('capnproto', 'Capâ€™n Proto'), ('chaos', 'Chaos'), ('chapel', 'Chapel'), ('cisco', 'Cisco CLI'), ('clojure', 'Clojure'), ('coffeescript', 'CoffeeScript'), ('cpc', 'CpcdosC+'), ('crmsh', 'Crmsh'), ('crystal', 'Crystal'), ('curl', 'cURL'), ('cypher', 'Cypher (Neo4j)'), ('d', 'D'), ('dafny', 'Dafny'), ('dart', 'Dart'), ('dpr', 'Delphi'), ('diff', 'Diff'), ('django', 'Django'), ('dns', 'DNS Zone file'), ('dockerfile', 'Dockerfile'), ('dos', 'DOS'), ('dsconfig', 'dsconfig'), ('dts', 'DTS (Device Tree)'), ('dust', 'Dust'), ('dylan', 'Dylan'), ('ebnf', 'EBNF'), ('elixir', 'Elixir'), ('elm', 'Elm'), ('erlang', 'Erlang'), ('excel', 'Excel'), ('extempore', 'Extempore'), ('fsharp', 'F#'), ('fix', 'FIX'), ('flix', 'Flix'), ('fortran', 'Fortran'), ('func', 'FunC'), ('gcode', 'G-Code'), ('gams', 'Gams'), ('gauss', 'GAUSS'), ('godot', 'GDScript'), ('gherkin', 'Gherkin'), ('hbs', 'Glimmer and EmberJS'), ('gn', 'GN for Ninja'), ('go', 'Go'), ('gf', 'Grammatical Framework'), ('golo', 'Golo'), ('gradle', 'Gradle'), ('graphql', 'GraphQL'), ('groovy', 'Groovy'), ('gsql', 'GSQL'), ('xml', 'HTML, XML'), ('http', 'HTTP'), ('haml', 'Haml'), ('handlebars', 'Handlebars'), ('haskell', 'Haskell'), ('haxe', 'Haxe'), ('hlsl', 'High-level shader language'), ('hy', 'Hy'), ('ini', 'Ini, TOML'), ('inform7', 'Inform7'), ('irpf90', 'IRPF90'), ('iptables', 'Iptables'), ('json', 'JSON'), ('java', 'Java'), ('javascript', 'JavaScript'), ('jolie', 'Jolie'), ('julia', 'Julia'), ('julia-repl', 'Julia REPL'), ('kotlin', 'Kotlin'), ('', 'Lang'), ('tex', 'LaTeX'), ('leaf', 'Leaf'), ('lean', 'Lean'), ('lasso', 'Lasso'), ('less', 'Less'), ('ldif', 'LDIF'), ('lisp', 'Lisp'), ('livecodeserver', 'LiveCode Server'), ('livescript', 'LiveScript'), ('lookml', 'LookML'), ('lua', 'Lua'), ('macaulay2', 'Macaulay2'), ('makefile', 'Makefile'), ('markdown', 'Markdown'), ('mathematica', 'Mathematica'), ('matlab', 'Matlab'), ('maxima', 'Maxima'), ('mel', 'Maya Embedded Language'), ('mercury', 'Mercury'), ('mips', 'MIPS Assembler'), ('mint', 'Mint'), ('mirc', 'mIRC Scripting Language'), ('mizar', 'Mizar'), ('mkb', 'MKB'), ('mlir', 'MLIR'), ('mojolicious', 'Mojolicious'), ('monkey', 'Monkey'), ('moonscript', 'Moonscript'), ('motoko', 'Motoko'), ('n1ql', 'N1QL'), ('nsis', 'NSIS'), ('never', 'Never'), ('nginx', 'Nginx'), ('nim', 'Nim'), ('nix', 'Nix'), ('oak', 'Oak'), ('ocl', 'Object Constraint Language'), ('ocaml', 'OCaml'), ('objectivec', 'Objective C'), ('glsl', 'OpenGL Shading Language'), ('openscad', 'OpenSCAD'), ('ruleslanguage', 'Oracle Rules Language'), ('oxygene', 'Oxygene'), ('pf', 'PF'), ('php', 'PHP'), ('papyrus', 'Papyrus'), ('parser3', 'Parser3'), ('perl', 'Perl'), ('pine', 'Pine Script'), ('plaintext', 'Plaintext'), ('pony', 'Pony'), ('pgsql', 'PostgreSQL & PL/pgSQL'), ('powershell', 'PowerShell'), ('processing', 'Processing'), ('prolog', 'Prolog'), ('properties', 'Properties'), ('proto', 'Protocol Buffers'), ('puppet', 'Puppet'), ('python', 'Python'), ('profile', 'Python profiler results'), ('python-repl', 'Python REPL'), ('qsharp', 'Q#'), ('k', 'Q'), ('qml', 'QML'), ('r', 'R'), ('cshtml', 'Razor CSHTML'), ('reasonml', 'ReasonML'), ('redbol', 'Rebol & Red'), ('rib', 'RenderMan RIB'), ('rsl', 'RenderMan RSL'), ('risc', 'RiScript'), ('riscv', 'RISC-V Assembly'), ('graph', 'Roboconf'), ('robot', 'Robot Framework'), ('rpm-specfile', 'RPM spec files'), ('ruby', 'Ruby'), ('rust', 'Rust'), ('rvt', 'RVT Script'), ('SAS', 'SAS'), ('scss', 'SCSS'), ('sql', 'SQL'), ('p21', 'STEP Part 21'), ('scala', 'Scala'), ('scheme', 'Scheme'), ('scilab', 'Scilab'), ('sfz', 'SFZ'), ('shexc', 'Shape Expressions'), ('shell', 'Shell'), ('smali', 'Smali'), ('smalltalk', 'Smalltalk'), ('sml', 'SML'), ('solidity', 'Solidity'), ('spl', 'Splunk SPL'), ('stan', 'Stan'), ('stata', 'Stata'), ('iecst', 'Structured Text'), ('stylus', 'Stylus'), ('subunit', 'SubUnit'), ('supercollider', 'Supercollider'), ('svelte', 'Svelte'), ('swift', 'Swift'), ('tcl', 'Tcl'), ('terraform', 'Terraform (HCL)'), ('tap', 'Test Anything Protocol'), ('thrift', 'Thrift'), ('toit', 'Toit'), ('tp', 'TP'), ('tsql', 'Transact-SQL'), ('twig', 'Twig'), ('typescript', 'TypeScript'), ('unicorn-rails-log', 'Unicorn Rails log'), ('vbnet', 'VB.Net'), ('vba', 'VBA'), ('vbscript', 'VBScript'), ('vhdl', 'VHDL'), ('vala', 'Vala'), ('verilog', 'Verilog'), ('vim', 'Vim Script'), ('xsharp', 'X#'), ('axapta', 'X++'), ('x86asm', 'x86 Assembly'), ('x86asmatt', 'x86 Assembly (AT&T)'), ('xl', 'XL'), ('xquery', 'XQuery'), ('yml', 'YAML'), ('zenscript', 'ZenScript'), ('zephir', 'Zephir')]}), 4: ('wagtail.blocks.TextBlock', (), {}), 5: ('wagtail.blocks.StructBlock', [[('language', 3), ('code', 4)]], {}), 6: ('blog.blocks.FoldBlock', (), {})}),
        ),
    ]
